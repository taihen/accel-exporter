name: Release

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch

permissions:
  contents: write # Needed to create releases and push tags

jobs:
  release: # Renamed job for clarity
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Fetch all history and tags for semantic-release
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"

      - name: Build binaries
        id: build # Give the step an ID to potentially reference outputs if needed
        run: |
          # Version will be determined by semantic-release, use placeholder or skip for build
          # LDFLAGS can be simplified if version injection isn't strictly needed during this build
          # Or semantic-release might provide the version as an env var later
          LDFLAGS="" # Simplified for now, semantic-release handles the tag/release version
          
          mkdir -p dist
          
          GOOS=linux GOARCH=amd64 go build -ldflags "${LDFLAGS}" -o dist/accel-exporter-linux-amd64 ./cmd/accel-exporter
          GOOS=linux GOARCH=arm64 go build -ldflags "${LDFLAGS}" -o dist/accel-exporter-linux-arm64 ./cmd/accel-exporter
          GOOS=darwin GOARCH=amd64 go build -ldflags "${LDFLAGS}" -o dist/accel-exporter-darwin-amd64 ./cmd/accel-exporter
          GOOS=darwin GOARCH=arm64 go build -ldflags "${LDFLAGS}" -o dist/accel-exporter-darwin-arm64 ./cmd/accel-exporter
          GOOS=windows GOARCH=amd64 go build -ldflags "${LDFLAGS}" -o dist/accel-exporter-windows-amd64.exe ./cmd/accel-exporter

      - name: Create checksums
        run: |
          cd dist
          sha256sum * > checksums.txt
          cd .. # Go back to the root directory

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        with:
          # You might need to fine-tune branches and plugins if needed
          # Default plugins usually include commit-analyzer, release-notes-generator, npm (can be ignored), github
          extra_plugins: |
            @semantic-release/git
            @semantic-release/exec
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Configure @semantic-release/git to commit changes like updated checksums if needed (optional)
          # Configure @semantic-release/github to upload assets
          SEMANTIC_RELEASE_GITHUB_ASSETS: dist/*.* # Upload all files from dist
        # Add configuration via .releaserc.json or here if needed
        # Example inline config (if not using .releaserc.json):
        # config: |
        #   {
        #     "branches": ["main"],
        #     "plugins": [
        #       "@semantic-release/commit-analyzer",
        #       "@semantic-release/release-notes-generator",
        #       ["@semantic-release/github", {
        #         "assets": [
        #           {"path": "dist/*.*", "label": "Distribution Assets"}
        #         ]
        #       }],
        #       ["@semantic-release/git", {
        #          "assets": ["CHANGELOG.md", "package.json"], // Example if you add these
        #          "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
        #       }]
        #     ]
        #   }
