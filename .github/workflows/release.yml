name: Release
on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
permissions:
  contents: write # Needed to create releases and push tags
jobs:
  release:
    name: Create Release
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          # Fetch all history and tags for semantic-release
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'
      - name: Build binaries
        id: build
        run: |
          # Get version from semantic-release
          VERSION=${GITHUB_REF#refs/tags/}
          if [ "$VERSION" = "" ]; then
            VERSION="dev"
          fi

          # Get commit hash and build date
          COMMIT=$(git rev-parse --short HEAD)
          DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          # Set ldflags for version injection
          LDFLAGS="-X main.version=${VERSION} -X main.commit=${COMMIT} -X main.date=${DATE}"
          mkdir -p dist
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "${LDFLAGS}" -o dist/accel-exporter-linux-amd64 ./cmd/accel-exporter
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags "${LDFLAGS}" -o dist/accel-exporter-linux-arm64 ./cmd/accel-exporter
          GOOS=darwin GOARCH=amd64 go build -ldflags "${LDFLAGS}" -o dist/accel-exporter-darwin-amd64 ./cmd/accel-exporter
          GOOS=darwin GOARCH=arm64 go build -ldflags "${LDFLAGS}" -o dist/accel-exporter-darwin-arm64 ./cmd/accel-exporter
      - name: Create checksums
        run: |
          cd dist
          sha256sum * > checksums.txt
          cd ..
      - name: Build Debian packages
        run: |
          # Use the Linux AMD64 binary we just built for Debian packages
          cp dist/accel-exporter-linux-amd64 dist/accel-exporter
          
          # Get version for debian changelog (will be set by semantic-release)
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null | sed 's/^v//' || echo "dev")
          echo "Building Debian packages for version: $VERSION"
          
          # Generate changelog with version and date
          sed -e "s/__VERSION__/${VERSION}/g" \
              -e "s/__DATE__/$(date -R)/" \
              debian/changelog > debian/changelog.tmp
          mv debian/changelog.tmp debian/changelog
          
          # Build packages for both Debian 11 and 12
          for debian_version in 11 12; do
            echo "Building Debian $debian_version package..."
            docker run --rm \
              -v $(pwd):/workspace \
              -w /workspace \
              debian:$debian_version \
              bash -c "
                set -e
                export DEBIAN_FRONTEND=noninteractive

                # Install minimal build dependencies
                apt-get update
                apt-get install -y build-essential debhelper devscripts

                # Build binary package
                dpkg-buildpackage -us -uc -b
              "
            
            # Collect the package
            mkdir -p dist/debian-$debian_version
            find .. -maxdepth 1 -name "*.deb" -exec mv {} dist/debian-$debian_version/ \;
            echo "Debian $debian_version packages:"
            ls -la dist/debian-$debian_version/
          done
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Configuration is now handled by .releaserc.json